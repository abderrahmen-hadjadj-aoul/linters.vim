{"note":"Don't delete this file! It's used internally to help with page regeneration.","google":"","body":"linters.vim - Check your code for lint as you write\r\n===================================================\r\n\r\nLinting tools like JSHint and pylint are excellent, but only if you run them\r\nconstantly. You can run them manually when you are finished coding, but then you\r\nhave to go back and edit all of your files again. You can run them as part of\r\ngit hooks, or as part of a make run, but even that is ages after you have\r\nfinished writing that section of code. The best time to run a linter is all of\r\nthe time.\r\n\r\n`linters.vim` runs linters over your code every time you save your file. Any\r\nerrors found are displayed instantly in the quickfix window. Writing clean code\r\nbecomes necessary - otherwise your editor will complain at you!\r\n\r\nInstalling\r\n----------\r\n\r\nThe easiest way to install is through [pathogen.vim][pathogen]. Install\r\npathogen, and then:\r\n\r\n\tgit clone https://bitbucket.org/tim_heap/linters.vim ~/.vim/bundle/linters\r\n\r\nOtherwise, copy the `plugin/linters.vim` file to your `~/.vim/plugin/`\r\ndirectory. It only needs the one file.\r\n\r\nUsing\r\n-----\r\n\r\nA number of languages are already supported (see \r\nSupported languages below). For any of these languages,\r\nsimply write your code as normal. As soon as you save your changes, the linter\r\nis run. Any errors or warnings are displayed in the quickfix window.\r\n\r\nTo jump to the first error, press `:cc` in normal mode.  You can navigate\r\nbetween errors using `[q` and `]q`. Save your changes to lint the file again.\r\n\r\nSupported languages\r\n-------------------\r\n\r\nThe following languages are currently supported:\r\n\r\n* JavaScript, using [JSHint][]\r\n* LESS, using the [LESS CSS compiler][]\r\n* Python, using either [pylint][] or [pyflakes][]\r\n* Haskell, using [hlint][]\r\n\r\n### Adding new languages\r\n\r\nAdding support for new languages is easy. Open up `plugin/linters.vim`, and add\r\nyour language down the bottom amongst the others. The syntax is:\r\n\r\n\tcall s:DefineLinter(\"filetype\", \"linter program\", [\"errorformat\"])\r\n\r\nwhere:\r\n\r\n* `language` is the Vim filetype for your language. Press `:set filetype` to see\r\n  what Vim thinks a language is called.\r\n\r\n* `linter program` is the shell command to run the linter. This should have two\r\n  placeholders, the first one for the input file to lint, and the second one for\r\n  the output file containing any errors. Shell piping and redirection is\r\n  allowed. The [JSHint][] linter command follows, for reference:\r\n\r\n\t  jshint %s > %s\r\n\r\n* `[\"errorformat\"]` is a list of `errorformat` style strings that your linter\r\n  will print. This takes after the Vim `errorformat` setting, but instead of\r\n  having a list of formats separated with spaces, this is a Vimscript list.\r\n  See the Vim help on `errorformat` for the syntax of this line, just ignore the\r\n  section on escaping.\r\n\r\nYou will likely want to wrap your definition in an `if executable(\"linter\")`\r\nstatement, to see if your linting program is available before defining it.\r\n\r\nTodo\r\n----\r\n\r\n* Add support for defining new linters in `~/.vimrc`. The linter script will\r\n  have to be run before this happens, so that `linters#register` is available.\r\n  You can define new linters at runtime by calling `linters#register`, with the\r\n  same signature as `s:DefineLinter`.\r\n\r\n* Work out if there is a better to run the linter than hooking in to\r\n  `BufWritePost` on every file open. This seems inefficient.\r\n\r\n* Add more language support - pull requests welcome!\r\n\r\nLicense\r\n-------\r\n\r\nThis plugin is released in to the public domain. Do what you will with it\r\n\r\n[pathogen]: http://github.com/tpope/pathogen.vim \"tpope/Pathogen.vim\"\r\n[JSHint]: https://github.com/jshint/node-jshint \"jshint/node-jshint\"\r\n[LESS CSS compiler]: https://github.com/cloudhead/less.js \"cloudhead/less.js\"\r\n[pylint]: http://pypi.python.org/pypi/pylint \"pypi/pylint\"\r\n[pyflakes]: http://pypi.python.org/pypi/pyflakes/0.5.0 \"pypi/pyflakes\"\r\n[hlint]: http://community.haskell.org/~ndm/hlint/ \"HLint\"\r\n","name":"Linters.vim","tagline":"Automatically run linters over your code as you write it "}